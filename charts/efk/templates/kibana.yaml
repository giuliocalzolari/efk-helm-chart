apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app.kubernetes.io/name: kibana
    {{- include "efk.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.kibana.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: elasticsearch-tls
          secret:
            secretName: elasticsearch-tls
      containers:
      - name: kibana
        image: {{ .Values.kibana.image }}
        {{- if .Values.kibana.init_index_pattern }}
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                #!/bin/bash
                # Apply default Index Pattern into Kibana
                KIBANA_URL=http://localhost:5601
                curl --retry 15 --retry-delay 5 -u $ELASTICSEARCH_USERNAME:$ELASTICSEARCH_PASSWORD -X POST "$KIBANA_URL/api/saved_objects/index-pattern/logstash" -H 'kbn-xsrf: true' -H 'Content-Type: application/json' -d'
                {
                  "attributes": {
                    "title": "logstash-*",
                    "timeFieldName": "@timestamp"
                  }
                }
                '
        {{- end }}
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_HOSTS
            value:  {{ printf "https://logs-elasticsearch.%s.svc.cluster.local:9200" .Release.Namespace }}
          - name: ELASTICSEARCH_USERNAME
            value: elastic
          - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
            value: /etc/kibana/config/certs/ca.crt
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kibana-password
                key: password
        volumeMounts:
        - name: elasticsearch-tls
          mountPath: /etc/kibana/config/certs
          readOnly: true

        ports:
        - containerPort: 5601

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    app.kubernetes.io/name: kibana
    {{- include "efk.labels" . | nindent 4 }}
spec:
  selector:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: {{ .Release.Name }}
  type: ClusterIP
  ports:
    - port: 5601
      targetPort: 5601


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.kibana.ingress.tls.issuer }}
    {{- with .Values.kibana.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.kibana.ingress.ingressClassName }}
  tls:
  - hosts:
    -  {{ .Values.kibana.ingress.host }}
    secretName: {{ .Values.kibana.ingress.tls.secret }}
  rules:
  - host: {{ .Values.kibana.ingress.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana
            port:
              number: 5601

---
apiVersion: v1
kind: Secret
metadata:
  name: kibana-password
type: Opaque
data:
  password: {{ .Values.kibana.password | b64enc}}
